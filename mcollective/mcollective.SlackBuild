#!/bin/sh

# Slackware build script for Marionette Collective.

# Copyright 2011-2012 Marco Bonetti <sid77@slackware.it>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#
# This SlackBuilds requires ruby192 !
#

PRGNAM=mcollective
VERSION=${VERSION:-2.0.0}
BUILD=${BUILD:-1}
TAG=${TAG:-_sid77}

ARCH=${ARCH:-i486}

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  LIBDIRSUFFIX="64"
fi

DOCS="COPYING ext"

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tgz
cd $PRGNAM-$VERSION

chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

make -f ext/Makefile install DESTDIR=$PKG

# Fix RHisms, the init script and install the proposed config files. Plus, the
# Makefile expects ruby1.8 so move the installation over to ruby192
mv $PKG/etc/init.d $PKG/etc/rc.d
mv $PKG/etc/rc.d/mcollective $PKG/etc/rc.d/rc.mcollective.new
sed -i -e 's:. /lib/lsb/init-functions:#. /lib/lsb/init-functions:g' $PKG/etc/rc.d/rc.mcollective.new
sed -i -e 's:log_success_msg::g' $PKG/etc/rc.d/rc.mcollective.new
sed -i -e 's:log_failure_msg::g' $PKG/etc/rc.d/rc.mcollective.new
mv $PKG/etc/mcollective/client.cfg.dist $PKG/etc/mcollective/client.cfg.new
mv $PKG/etc/mcollective/facts.yaml.dist $PKG/etc/mcollective/facts.yaml.new
mv $PKG/etc/mcollective/rpc-help.erb $PKG/etc/mcollective/rpc-help.erb.new
mv $PKG/etc/mcollective/server.cfg.dist $PKG/etc/mcollective/server.cfg.new
mkdir -p $PKG/opt/ruby/1.9.2-p180/lib/ruby/1.9.1
mv $PKG/usr/lib/ruby/1.8/* $PKG/opt/ruby/1.9.2-p180/lib/ruby/1.9.1/
rm -rf $PKG/usr/lib
sed -i -e 's:#!/usr/bin/env ruby:#!/usr/bin/env ruby192:g' $PKG/usr/sbin/mcollectived
mv $PKG/usr/share/doc $PKG/usr/doc
mv $PKG/usr/doc/mcollective $PKG/usr/doc/$PRGNAM-$VERSION

cp -a $DOCS $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
